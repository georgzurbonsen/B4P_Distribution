


/*
	Short Commands Library.txt
	____________________________________________________________________________________________________________


	Provides short command-type function names for some functions used mainly interactively

	____________________________________________________________________________________________________________


	Author:			Georg zur Bonsen
				Copyright (C) 2017-2024 by Georg zur Bonsen, All Rights Reserved

	Contents:

	mkdir, md		Creates 1 new directory
	chdir, cd		Changes to different directory
				If called without parameter:
					Windows: Like pwd
					Others: Changes to user home directory
	rmdir, rd		Removes 1 directory
	pwd			Outputs current path onto console



	Revision History:
	____________________________________________________________________________________________________________

	Library	BP		Date		Features

	1.00	10.04		2024-04-01	First Release

*/


once
{

	//
	// Version verification
	// _________________________________________________________________________________________________________
	//

	libraries[short commands library,version info] = "3.00";
	if (runtime settings[verbose] != quiet) echo("Included: ", "Short Commands Library", "  ", libraries[short commands library,version info] );


	if (num( left( version info[], ' ')) < 10.00)
	{
	    echo("Version Mismatch. Prerequisite for using this file 'Short Commands Library.txt' is B4P Release 10.00 or newer.");
	    echo("Please obtain and install latest available release.");
	    stop;
	}

	

// Creates following short procedure names, ideally suited for interactive use

//	pwd		Outputs current directory path
//	mkdir		Creates one directory
//	md		"
//	chdir		Changes to different directory.  If no parameter specified: Windows: Ouputs current directory path.  LINUX: Go to user home directory.
//	cd		"
//	rmdir		Removes one directory
//	rd		"


define procedure( pwd )
{
    echo( working directory() );
}


define procedure( mkdir, {{ path, string }} )
{
  local
  {
    directory create( path[] );
  }
}
define additional procedure( md, mkdir, {{ path, string }} );


define procedure( chdir, {{ path, string }}, 0, 1 )
{
  local
  {
    if (parameter count[]=0)
    {
	if (system info[operating system]=+Windows)
	{
	    echo( working directory() );
	}
	else
	{
	    working directory( system info[user directory] );
	}
    }
    else
    {
	if (directory existing( path[] ))
	{
	    working directory( path[] );
	}
	else
	{
	    echo("Directory name ", path[], " not found or invalid." );
	}
    }
  }
}
define additional procedure( cd, chdir, {{ path, string }}, 0, 1 );



define procedure( rmdir, {{ path, string }} )
{
  local
  {
	if (directory existing( path[] ))
	{
	    rv[] = directory delete silently( path[] );
	    if (rv[] != OK)
	    {
		echo( rv[] );
	    }
	}
	else
	{
	    echo("Directory name ", path[], " not found or invalid." );
	}
  }
}
define additional procedure( rd, rmdir, {{ path, string }} );


} // once
